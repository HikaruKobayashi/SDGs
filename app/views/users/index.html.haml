.header
  %img.img-fluid.header-icon{ :src => 'assets/header-icon.jpg' }
  .canvas-area
    #canvas-wrapper.col-12{ :ariaLabel => 'wire', style: 'padding: 0;' }

%br
%br
%br
%br
%br
%br
%br
%br
%br
%br
%br
%br
%br
%br
%br
%br
%br
%br
%br

.inner-body.col-12
  .container
    .container-box
      %h2.sub-title= t('body.sdgs_title')
      .sdgs-icon-area.col-10
        %img.sdgs-icon-small{ :src => 'assets/SDGs/sdgs-icon-1.png' }
        %img.sdgs-icon-small{ :src => 'assets/SDGs/sdgs-icon-2.png' }
        %img.sdgs-icon-small{ :src => 'assets/SDGs/sdgs-icon-3.png' }
        %img.sdgs-icon-small{ :src => 'assets/SDGs/sdgs-icon-4.png' }
        %img.sdgs-icon-small{ :src => 'assets/SDGs/sdgs-icon-5.png' }
        %img.sdgs-icon-small{ :src => 'assets/SDGs/sdgs-icon-6.png' }
        %img.sdgs-icon-small{ :src => 'assets/SDGs/sdgs-icon-7.png' }
        %img.sdgs-icon-small{ :src => 'assets/SDGs/sdgs-icon-8.png' }
        %img.sdgs-icon-small{ :src => 'assets/SDGs/sdgs-icon-9.png' }
        %img.sdgs-icon-small{ :src => 'assets/SDGs/sdgs-icon-10.png' }
        %img.sdgs-icon-small{ :src => 'assets/SDGs/sdgs-icon-11.png' }
        %img.sdgs-icon-small{ :src => 'assets/SDGs/sdgs-icon-12.png' }
        %img.sdgs-icon-small{ :src => 'assets/SDGs/sdgs-icon-13.png' }
        %img.sdgs-icon-small{ :src => 'assets/SDGs/sdgs-icon-14.png' }
        %img.sdgs-icon-small{ :src => 'assets/SDGs/sdgs-icon-15.png' }
        %img.sdgs-icon-small{ :src => 'assets/SDGs/sdgs-icon-16.png' }
        %img.sdgs-icon-small{ :src => 'assets/SDGs/sdgs-icon-17.png' }
        %img.sdgs-icon-small{ :src => 'assets/SDGs/sdgs-icon-18.png' }

    .container-box
      %h2.sub-title= t('body.effort_title')
      .scroll-area
        .sdgs-scroll-area
          .sdg
            %img.sdgs-box.img-fluid{ :src => 'assets/SDGs/sdgs-icon-1.png' }
            .sdgs-footer
              %button.btn.btn-warning.detail-btn#js-show-popup 詳細
            #js-popup.popup
              .popup-inner
                #js-close-btn.close-btn
                  %i.fas.fa-times
                -# 以下はポップアップのサンプル
                %a{:href => "#"}
                %h2 貧困を無くそう
                %h4 〜あらゆる場所であらゆる形態の貧困に終止符を打つ〜
                %h4 貧困に終止符とは？
                %p 現在、地球上では7億人を超える人々が1日1ドル90セント未満の生活を強いられる極度の貧困の中の生きています。
                %p 裕福な生活をした我々が貧困の人々を救うことは福祉的な観点が一番大きいですが、経済成長の拡大と共に不平等が拡大することは将来的な紛争や戦争といった争うの可能性を限りなく減らすと言う観点からも重要である。
                %h4 目標の実現に向けて
                %p 極度の貧困を減らすために必要となる資金は1,750億ドルと推定されています。この額は全世界のもっとも裕福であると言われている国々の総所得を合わした額の1%にも及ばない程度です。
                %P 先進国で暮らす我々ができることはあなたが想像しているよりもはるかにたくさんあると私は考えます。　
              #js-black-bg.black-background

          .sdg
            %img.sdgs-box{ :src => 'assets/SDGs/sdgs-icon-2.png' }
            .sdgs-footer
              %button.btn.btn-warning.detail-btn 詳細

          .sdg
            %img.sdgs-box{ :src => 'assets/SDGs/sdgs-icon-3.png' }
            .sdgs-footer
              %button.btn.btn-warning.detail-btn 詳細

          .sdg
            %img.sdgs-box{ :src => 'assets/SDGs/sdgs-icon-4.png' }
            .sdgs-footer
              %button.btn.btn-warning.detail-btn 詳細

          .sdg
            %img.sdgs-box{ :src => 'assets/SDGs/sdgs-icon-5.png' }
            .sdgs-footer
              %button.btn.btn-warning.detail-btn 詳細

          .sdg
            %img.sdgs-box{ :src => 'assets/SDGs/sdgs-icon-6.png' }
            .sdgs-footer
              %button.btn.btn-warning.detail-btn 詳細

          .sdg
            %img.sdgs-box{ :src => 'assets/SDGs/sdgs-icon-7.png' }
            .sdgs-footer
              %button.btn.btn-warning.detail-btn 詳細

          .sdg
            %img.sdgs-box{ :src => 'assets/SDGs/sdgs-icon-8.png' }
            .sdgs-footer
              %button.btn.btn-warning.detail-btn 詳細

          .sdg
            %img.sdgs-box{ :src => 'assets/SDGs/sdgs-icon-9.png' }
            .sdgs-footer
              %button.btn.btn-warning.detail-btn 詳細

          .sdg
            %img.sdgs-box{ :src => 'assets/SDGs/sdgs-icon-10.png' }
            .sdgs-footer
              %button.btn.btn-warning.detail-btn 詳細

          .sdg
            %img.sdgs-box{ :src => 'assets/SDGs/sdgs-icon-11.png' }
            .sdgs-footer
              %button.btn.btn-warning.detail-btn 詳細

          .sdg
            %img.sdgs-box{ :src => 'assets/SDGs/sdgs-icon-12.png' }
            .sdgs-footer
              %button.btn.btn-warning.detail-btn 詳細

          .sdg
            %img.sdgs-box{ :src => 'assets/SDGs/sdgs-icon-13.png' }
            .sdgs-footer
              %button.btn.btn-warning.detail-btn 詳細

          .sdg
            %img.sdgs-box{ :src => 'assets/SDGs/sdgs-icon-14.png' }
            .sdgs-footer
              %button.btn.btn-warning.detail-btn 詳細

          .sdg
            %img.sdgs-box{ :src => 'assets/SDGs/sdgs-icon-15.png' }
            .sdgs-footer
              %button.btn.btn-warning.detail-btn 詳細

          .sdg
            %img.sdgs-box{ :src => 'assets/SDGs/sdgs-icon-16.png' }
            .sdgs-footer
              %button.btn.btn-warning.detail-btn 詳細

          .sdg
            %img.sdgs-box{ :src => 'assets/SDGs/sdgs-icon-17.png' }
            .sdgs-footer
              %button.btn.btn-warning.detail-btn 詳細

    .container-box
      %h2.sub-title 日本での認知度
      .col-12
        %div
          %canvas#myChart.awareness.col-12

    .container-box
      %h2.sub-title お問い合わせ
      .col-12{ class: 'example contact-form' }
        %div
          %h2.turnBoxButton{ style: 'margin-top: 20px; cursor: pointer;' } Click
        %div
          %ul{ class: 'user-information' }
            %li
              %span.contact-text= t('body.name')
              %input{ type: 'text', style: 'margin-right: 10px;' }
            %li
              %span.contact-text= t('body.mail')
              %input{ type: 'text', style: 'margin-right: 10px;' }
          %textarea
          %span.check
            %div
              %a{ class: 'confirm-button turnBoxButton', style: 'font-size: 30px; line-height: 50px;'  }= t('body.confirm')
            %div
              %a{ class: 'cancel turnBoxButton turnBoxButtonPrev', style: 'height: 50px; line-height: 50px;' } CANSEL
              %a{ class: 'send turnBoxButton', style: 'height: 50px; line-height: 50px;' } SEND
        %div
          %h2{ class: 'turnBoxButton turnBoxButtonPrev',style: 'margin-top: 20px; cursor: pointer;' } THANKS

-# ----------------------------
-# footer
-# ----------------------------
= render 'layouts/footer'

= javascript_include_tag 'turnBox.js', 'anime.min.js'

-# ----------------------------
-# JavaScript
-# ----------------------------
:javascript
  document.addEventListener("turbolinks:load", function(){
    $(function(){
      $('a[href^="#"]').click(function() {
        const speed = 1200;
        const href= $(this).attr("href");
        const target = $(href == "#" || href == "" ? 'html' : href);
        const position = target.offset().top;
        $('body,html').animate({scrollTop:position}, speed, 'swing');
        return false;
      });
    });

    window.onload = function() {
      let swipeOption = {
        loop: true,
        effect: 'fade',
        autoplay: {
          delay: 5000,
          disableOnInteraction: false,
        },
        speed: 1000,
        pagitation: {
          el: '.swiper-pagination',
          clickable: true,
        }
      }
      new Swiper('.swiper-container', swipeOption);
    }

    // turnBox.js
    const width = 340;
    const duration = 450;
    const general_box = $('.example');
    const confirm_box = general_box.find('.check');

    general_box.turnBox({
      width: width,
      height: 87,
      even: 400,
      perspective: 3000,
      duration: duration,
      easing: "ease-in-out",
      type: "repeat"
    });

    confirm_box.turnBox({
      width: width * 0.9,
      height: 60,
      perspective: 3000,
      duration: 300,
      easing: "ease-in-out"
    });

    confirm_box.find(".send").turnBoxLink({
      box: ".contact-form",
      events: "click touchend"
    });

    $(".confirm-button").on("click", function()
    {
      $(".contact-form input, .contact-form textarea").addClass("lock").attr("disabled", "disabled");
    });

    $(".cancel").on("click", function()
    {
      $(".contact-form input, .contact-form textarea").removeClass("lock").removeAttr("disabled");
    });

    confirm_box.find(".send").on("click touchend", function()
    {
      setTimeout(function()
      {
        confirm_box.turnBoxAnimate({
          animation: false
        });
        general_box.find("input").val("");
        general_box.find("textarea").val("");
        $(".contact-form input, .contact-form textarea").removeClass("lock").removeAttr("disabled");
      }, duration);
    });

    // Charts.js
    const ctx = document.getElementById("myChart").getContext('2d');
  
    const original = Chart.defaults.global.legend.onClick;
    Chart.defaults.global.legend.onClick = function(e, legendItem) {
      update_caption(legendItem);
      original.call(this, e, legendItem);
    };
    
    const myChart = new Chart(ctx, {
      type: 'bar',
      data: {
        labels: ["2016", "2017", "2018", "2019"],
        datasets: [{
          type: 'line',
          label: '合計',
          lineTenstion: 0,
          borderColor: "rgba(255,255,255,0.7)",
          borderWidth: "3",
          backgroundColor: "rgba(255,255,255,0.7)",
          fill: false,
          data: [3, 7, 11, 17],
          pointStyle: "rect",
          pointBorderColor: "rgba(255,255,255,0.7)",
          pointBackgroundColor: "rgba(255,255,255,0.7)",
          pointRadius: 10,
          pointHoverRadius: 10,
          pointHoverBackgroundColor: "rgba(255,255,255,0.7)",
          pointHoverBorderColor: "rgba(255,255,255,0.7)",
        }, {
          label: '男性',
          backgroundColor: "rgba(91,155,213,0.7)",
          data: [1, 3, 5, 9],
        }, {
          label: '女性',
          backgroundColor: "rgba(214,112,90, 0.7)",
          data: [2, 4, 6, 8],
        }]
      },
      options: {
        title: {
          display: true,
          padding:3,
          fontSize: 26
        },
        scales: {
          xAxes: [{
            stacked: true,
            categoryPercentage:0.8
          }],
          yAxes: [{
            stacked: true,
            ticks: {
              stepSize: 2
            }
          }]
        },
        legend: {
          labels: {
            boxWidth: 12,
            padding: 20
          },
          display: true
        },
        tooltips:{
          mode:'label'
        }
      }
    });

    // three.js
    const colorBg = '#212121'; // Black
    const colorSDGs = 'rgba(10, 10, 10, 0.8)'; // blue

    const nearDist = 0.1;
    const farDist = 1000;

    const scene = new THREE.Scene();
    const camera = new THREE.PerspectiveCamera(
      75,
      window.innerWidth / window.innerHeight,
      nearDist,
      farDist
    );
    camera.position.z = farDist;

    const renderer = new THREE.WebGLRenderer({
      alpha: true,
      antialias: true
    });
    renderer.setClearColor(colorBg, 0); // Set the bg via CSS instead, for a gradient effect
    renderer.setPixelRatio(window.devicePixelRatio); // For HiDPI devices to prevent bluring output canvas
    renderer.setSize(window.innerWidth, window.innerHeight);
    document.querySelector("#canvas-wrapper").appendChild(renderer.domElement);

    // CREATE TYPOGRAPHY
    const group = new THREE.Group();
    const typoLoader = new THREE.FontLoader();
    const createTypo = font => {
      const word = "SDGs";
      const typoSize = 100;
      const typoProperties = {
        font: font,
        size: typoSize,
        height: typoSize * 3,
        curveSegments: 1,
        bevelEnabled: true,
        bevelThickness: 0.1,
        bevelSize: 2,
        bevelOffset: 0,
        bevelSegments: 3
      };
      const textMesh = new THREE.Mesh();
      
      textMesh.geometry = new THREE.TextBufferGeometry(word, typoProperties);
      textMesh.material =  new THREE.MeshBasicMaterial({ 
        color: (colorSDGs),
        wireframe: true,
      });
      
      // Let's center typo in scene
      textMesh.geometry.computeBoundingBox();
      textMesh.geometry
        .boundingBox
        .getCenter(textMesh.position)
        .multiplyScalar(-1);
      
      // Manually control when 3D transformations recalculation occurs for better performance
      textMesh.matrixAutoUpdate = false;
      textMesh.updateMatrix();

      group.add(textMesh);
    };

    typoLoader.load(
      "https://threejs.org/examples/fonts/helvetiker_bold.typeface.json",
      createTypo
    );
    scene.add(group);

    // CREATE PART OF THE MOUSE/TOUCH OVER EFFECT
    let mouseX = 0;
    let mouseY = 0;
    const mouseFX = {
      windowHalfX: window.innerWidth / 2,
      windowHalfY: window.innerHeight / 2,
      coordinates: function(coordX, coordY) {
        mouseX = coordX - mouseFX.windowHalfX;
        mouseY = coordY - mouseFX.windowHalfY;
        
        mouseX = mouseX < 0 ? Math.abs(mouseX) : mouseX;
      },
      onMouseMove: function(e) {
        mouseFX.coordinates(e.clientX, e.clientY);
      },
      onTouchMove: function(e) {
        const touchX = e.changedTouches[0].clientX * 2;
        const touchY = e.changedTouches[0].clientY * 2;
        mouseFX.coordinates(touchX, touchY);
      }
    };
    document.addEventListener("mousemove", mouseFX.onMouseMove, false);
    document.addEventListener("touchmove", mouseFX.onTouchMove, false);

    // RESIZE CANVAS
    const resizeCanvas = () => {
      camera.aspect = window.innerWidth / window.innerHeight;
      camera.updateProjectionMatrix();
      renderer.setSize(window.innerWidth, window.innerHeight);
    };
    window.addEventListener("resize", resizeCanvas, false);

    // RENDER 3D GRAPHIC
    const render = () => {
      requestAnimationFrame(render);

      // Camera animation
      // Works with onMouseMove and onTouchMove functions
      const ct = 0.05;
      const pZ = (mouseX - camera.position.z) * ct;
      camera.position.z += pZ;		

      // Floating animation
      const radians = Date.now() * 0.0005;
      const rot = Math.sin(radians) * 0.1;
      group.rotation.x = rot;
      group.rotation.y = rot;

      renderer.render(scene, camera);
    };
    render();
  });

  function popupImage() {
    var popup = document.getElementById('js-popup');
    if(!popup) return;

    var blackBg = document.getElementById('js-black-bg');

    var blackBg = document.getElementById('js-black-bg');
    var closeBtn = document.getElementById('js-close-btn');
    var showBtn = document.getElementById('js-show-popup');

    closePopUp(blackBg);
    closePopUp(closeBtn);
    closePopUp(showBtn);
    function closePopUp(elem) {
      if(!elem) return;
      elem.addEventListener('click', function() {
        popup.classList.toggle('is-show');
      });
    }
  }
  popupImage();