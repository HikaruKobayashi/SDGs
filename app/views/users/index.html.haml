.header#index
  %img.header-icon#header-icon{ :src => 'assets/header-icon.jpg' }
  .anime-area
    #canvas-wrapper{ :ariaLabel => 'wire' }
  .header-text
    %a.header-title{ :href => "#1" }= t('body.sdgs')
    %a.header-title{ :href => "#2" }= t('body.effort')
    %a.header-title{ :href => "#3" }= t('body.japan')
    %a.header-title{ :href => "#4" }= t('body.awareness')
    %a.header-title{ :href => "#5" }= t('body.contact')

%div#1
.sdgs{ style: 'height: 100px; margin-top: 100px;' }
  %h1= t('body.sdgs')
  %p{ style: 'text-align: center;' }= t('body.sdgs_title')

.sdgs{ style: 'width: 1680px; height: 650px;' }
  .sdgs-icon-box-area
    .sdgs-icon-area
      %img.sdgs-icon-small{ :src => 'assets/SDGs/sdgs-icon-1.png' }
      %img.sdgs-icon-small{ :src => 'assets/SDGs/sdgs-icon-2.png' }
      %img.sdgs-icon-small{ :src => 'assets/SDGs/sdgs-icon-3.png' }
      %img.sdgs-icon-small{ :src => 'assets/SDGs/sdgs-icon-4.png' }
      %img.sdgs-icon-small{ :src => 'assets/SDGs/sdgs-icon-5.png' }
      %img.sdgs-icon-small{ :src => 'assets/SDGs/sdgs-icon-6.png' }
      %img.sdgs-icon-small{ :src => 'assets/SDGs/sdgs-icon-7.png' }
      %img.sdgs-icon-small{ :src => 'assets/SDGs/sdgs-icon-8.png' }
      %img.sdgs-icon-small{ :src => 'assets/SDGs/sdgs-icon-9.png' }
      %img.sdgs-icon-small{ :src => 'assets/SDGs/sdgs-icon-10.png' }
      %img.sdgs-icon-small{ :src => 'assets/SDGs/sdgs-icon-11.png' }
      %img.sdgs-icon-small{ :src => 'assets/SDGs/sdgs-icon-12.png' }
      %img.sdgs-icon-small{ :src => 'assets/SDGs/sdgs-icon-13.png' }
      %img.sdgs-icon-small{ :src => 'assets/SDGs/sdgs-icon-14.png' }
      %img.sdgs-icon-small{ :src => 'assets/SDGs/sdgs-icon-15.png' }
      %img.sdgs-icon-small{ :src => 'assets/SDGs/sdgs-icon-16.png' }
      %img.sdgs-icon-small{ :src => 'assets/SDGs/sdgs-icon-17.png' }
      %img.sdgs-icon-small{ :src => 'assets/SDGs/sdgs-icon-18.png' }
    .sdgs-explanation
      %h3{ style: 'text-align: center; margin-top: 30px;' }= t('body.sdgs_sub_title')
      .sdgs-text-area
        %p{ style: 'font-weight: bold;' } SDGs(Sustainable Development Goals)とは、日本語で「持続可能な開発目標」のことを指す言葉です。
        %p{ style: 'font-weight: bold;' } 国連加盟193ヵ国で2016年から2030年の間の15年間でそれぞれが達成すべく設定した目標のことです。
        %p{ style: 'font-weight: bold; text-align: center;' } SDGsについて詳しくみる
      %button.details-btn{ style: 'margin-left: 155px;' }= t('body.detail')


#2
.sdgs{ style: 'height: 100px; margin-top: 180px;' }
  %h1= t('body.effort')
  %p{ style: 'text-align: center;' }= t('body.effort_title')
  %img.effort-icon{ :src => 'assets/sunrise.jpg' }
.scroll-area
  %div.sdgs-scroll-area
    .sdg
      %img.sdgs-box{ :src => 'assets/SDGs/sdgs-icon-1.png' }
      .sdgs-footer
        %button.details-btn
          = link_to '詳細', no_poverties_path

    .sdg
      %img.sdgs-box{ :src => 'assets/SDGs/sdgs-icon-2.png' }
      .sdgs-footer
        %button.details-btn
          = link_to '詳細', zero_hungers_path

    .sdg
      %img.sdgs-box{ :src => 'assets/SDGs/sdgs-icon-3.png' }
      .sdgs-footer
        %button.details-btn
          = link_to '詳細', good_health_and_well_beings_path

    .sdg
      %img.sdgs-box{ :src => 'assets/SDGs/sdgs-icon-4.png' }
      .sdgs-footer
        %button.details-btn
          = link_to '詳細', quality_eduactions_path

    .sdg
      %img.sdgs-box{ :src => 'assets/SDGs/sdgs-icon-5.png' }
      .sdgs-footer
        %button.details-btn
          = link_to '詳細', gender_equalities_path

    .sdg
      %img.sdgs-box{ :src => 'assets/SDGs/sdgs-icon-6.png' }
      .sdgs-footer
        %button.details-btn
          = link_to '詳細', clean_water_and_sanitations_path

    .sdg
      %img.sdgs-box{ :src => 'assets/SDGs/sdgs-icon-7.png' }
      .sdgs-footer
        %button.details-btn
          = link_to '詳細', affordable_and_clean_energies_path

    .sdg
      %img.sdgs-box{ :src => 'assets/SDGs/sdgs-icon-8.png' }
      .sdgs-footer
        %button.details-btn
          = link_to '詳細', decent_work_and_economic_growths_path

    .sdg
      %img.sdgs-box{ :src => 'assets/SDGs/sdgs-icon-9.png' }
      .sdgs-footer
        %button.details-btn
          = link_to '詳細', industry_innovation_and_infrastructures_path

    .sdg
      %img.sdgs-box{ :src => 'assets/SDGs/sdgs-icon-10.png' }
      .sdgs-footer
        %button.details-btn
          = link_to '詳細', reduced_inequeaties_path

    .sdg
      %img.sdgs-box{ :src => 'assets/SDGs/sdgs-icon-11.png' }
      .sdgs-footer
        %button.details-btn
          = link_to '詳細', sustainable_cities_and_communities_path

    .sdg
      %img.sdgs-box{ :src => 'assets/SDGs/sdgs-icon-12.png' }
      .sdgs-footer
        %button.details-btn
          = link_to '詳細', responsible_consumption_and_productions_path

    .sdg
      %img.sdgs-box{ :src => 'assets/SDGs/sdgs-icon-13.png' }
      .sdgs-footer
        %button.details-btn
          = link_to '詳細', climate_actions_path

    .sdg
      %img.sdgs-box{ :src => 'assets/SDGs/sdgs-icon-14.png' }
      .sdgs-footer
        %button.details-btn
          = link_to '詳細', life_below_waters_path


    .sdg
      %img.sdgs-box{ :src => 'assets/SDGs/sdgs-icon-15.png' }
      .sdgs-footer
        %button.details-btn
          = link_to '詳細', life_on_lands_path

    .sdg
      %img.sdgs-box{ :src => 'assets/SDGs/sdgs-icon-16.png' }
      .sdgs-footer
        %button.details-btn
          = link_to '詳細', peace_justice_and_strong_institutions_path

    .sdg
      %img.sdgs-box{ :src => 'assets/SDGs/sdgs-icon-17.png' }
      .sdgs-footer
        %button.details-btn
          = link_to '詳細', partnerships_for_the_goals_path

#3
.sdgs{ style: 'height: 100px; margin-top: 250px;' }
  %h1= t('body.japan')
  %p{ style: 'text-align: center;' }= t('body.japan_title')

.sdgs{ style: 'width: 1680px; height: 650px;' }
  .sdgs-icon-box-area-2
    .sdgs-explanation-2
      %h2{ style: 'color: rgb(240, 128, 128);' } 個人
      .sdgs-icon-background-2
        %h2{ style: 'color: rgb(240, 128, 128);' } 企業
        .sdgs-icon-background-2
          %h2{ style: 'color: rgb(240, 128, 128);' } 外務省
          %iframe.youtube-area{ style: 'width: 560px; height: 315px; margin-left: 20px; margin-top:22px;', :src => 'https://www.youtube.com/embed/WXpZ-b4Qskg', frameborder: '0',  allow: 'accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture' }

#4
.sdgs{ style: 'margin-top: 200px;' }
  %h1 Awareness
  %p{ style: 'text-align: center;' } 日本での認知度
  %canvas#myChart.awareness

.sdgs{ style: 'height: 150px; cursor: pointer; margin-top: 450px;' }
  %h1= t('body.contact')
  %p{ style: 'text-align: center;' } お問い合わせ
  -# %img.contact-icon{ :src => 'assets/contact-icon.jpg' }

%div#5{ class: 'example contact-form' }
  %div
    %h2.turnBoxButton{ style: 'margin-top: 20px; cursor: pointer;' }= t('body.contact')
  %div
    %ul{ class: 'user-information' }
      %li{ style: 'margin-right: 40px;' }
        %span.contact-text= t('body.name')
        %input{ type: 'text', style: 'margin-left: 10px;' }
      %li{ style: 'margin-right: 40px;' }
        %span.contact-text= t('body.mail')
        %input{ type: 'text', style: 'margin-left: 10px;' }
    %textarea
    %span.check
      %div
        %a{ class: 'confirm-button turnBoxButton', style: 'font-size: 30px; line-height: 50px;'  }= t('body.confirm')
      %div
        %a{ class: 'cancel turnBoxButton turnBoxButtonPrev', style: 'height: 50px; line-height: 50px;' } CANSEL
        %a{ class: 'send turnBoxButton', style: 'height: 50px; line-height: 50px;' } SEND
  %div
    %h2{ class: 'turnBoxButton turnBoxButtonPrev',style: 'margin-top: 20px; cursor: pointer;' } THANKS

.footer{ style: 'margin-top: 50px;' }
  %h2.footer-title= t('body.sdgs')
  %p.footer-text SDGsのご意見、感想、お問い合わせ各種、お気軽にどうぞ。

  -# %p.top-btn{ :href => "#index" } Top ⤴
  %a.top-btn{ :href => "#index" } Top ⤴
  .footer-icon-area
    %img.git-hub-icon{ :src => 'assets/Git-hub.png' }
    %p.git-hub Git Hub
  %p{ style: 'color: rgb(255, 255, 255); margin-left: 160px; width: 300px; height: 50px;' } 2019 @ Hikaru Kobayshi

= javascript_include_tag 'turnBox.js', 'anime.min.js', 'body.js', 'js_es-6.js'

:javascript
  // anime.js
  anime({
    targets: '.sdgs-icon-small',
    loop: true,
    scale: [
      {value: .1, easing: 'easeOutSine', duration: 500},
      {value: 1, easing: 'easeInOutQuad', duration: 1200}
    ],
    delay: anime.stagger(200, {grid: [14, 5], from: 'center'})
  });

  // turnBox.js
  const width = 340;
  const duration = 450;
  const general_box = $('.example');
  const confirm_box = general_box.find('.check');

  general_box.turnBox({
    width: width,
    height: 87,
    even: 400,
    perspective: 3000,
    duration: duration,
    easing: "ease-in-out",
    type: "repeat"
  });

  confirm_box.turnBox({
    width: width * 0.9,
    height: 60,
    perspective: 3000,
    duration: 300,
    easing: "ease-in-out"
  });

  confirm_box.find(".send").turnBoxLink({
    box: ".contact-form",
    events: "click touchend"
  });

  $(".confirm-button").on("click", function()
  {
    $(".contact-form input, .contact-form textarea").addClass("lock").attr("disabled", "disabled");
  });

  $(".cancel").on("click", function()
  {
    $(".contact-form input, .contact-form textarea").removeClass("lock").removeAttr("disabled");
  });

  confirm_box.find(".send").on("click touchend", function()
  {
    setTimeout(function()
    {
      confirm_box.turnBoxAnimate({
        animation: false
      });
      general_box.find("input").val("");
      general_box.find("textarea").val("");
      $(".contact-form input, .contact-form textarea").removeClass("lock").removeAttr("disabled");
    }, duration);
  });

  // Charts.js
  const ctx = document.getElementById('myChart').getContext('2d');
  const myChart = new Chart(ctx, {
    type: 'line',
    data: {
      labels: ['2016', '2017', '2018', '2019'],
      datasets: [{
        label: 'all',
        data: [12, 12, 14, 27],
        backgroundColor: "rgba(255,255,0,0.4)"
      }, {
        label: 'men',
        data: [15, 16, 16, 31],
        backgroundColor: "rgba(255,165,255,0.4)"
      }, {
        label: 'female',
        data: [9, 9, 11, 23],
        backgroundColor: "rgba(255, 0,0,0.4)"
      }]
    }
  });

  // three.js
  const colorBg = '#212121'; // Black
  const colorWire = '#18FFFF'; // blue

  const nearDist = 0.1;
  const farDist = 1000;

  const scene = new THREE.Scene();
  const camera = new THREE.PerspectiveCamera(
    75,
    window.innerWidth / window.innerHeight,
    nearDist,
    farDist
  );
  camera.position.z = farDist;

  const renderer = new THREE.WebGLRenderer({
    alpha: true,
    antialias: true
  });
  renderer.setClearColor(colorBg, 0); // Set the bg via CSS instead, for a gradient effect
  renderer.setPixelRatio(window.devicePixelRatio); // For HiDPI devices to prevent bluring output canvas
  renderer.setSize(window.innerWidth, window.innerHeight);
  document.querySelector("#canvas-wrapper").appendChild(renderer.domElement);

  // CREATE TYPOGRAPHY
  const group = new THREE.Group(); // To add 3d float effect
  const typoLoader = new THREE.FontLoader();
  const createTypo = font => {
    const word = "SDDs";
    const typoSize = 120;
    const typoProperties = {
      font: font,
      size: typoSize,
      height: typoSize * 3,
      curveSegments: 1,
      bevelEnabled: true,
      bevelThickness: 0.1,
      bevelSize: 2,
      bevelOffset: 0,
      bevelSegments: 3
    };
    const textMesh = new THREE.Mesh();
    
    textMesh.geometry = new THREE.TextBufferGeometry(word, typoProperties);
    textMesh.material =  new THREE.MeshBasicMaterial({ 
      color: (colorWire),
      wireframe: true,
    });
    
    // Let's center typo in scene
      textMesh.geometry.computeBoundingBox();
    textMesh.geometry
      .boundingBox
      .getCenter(textMesh.position)
      .multiplyScalar(-1);
    
    // Manually control when 3D transformations recalculation occurs for better performance
    textMesh.matrixAutoUpdate = false;
    textMesh.updateMatrix();

    group.add(textMesh);
  };

  typoLoader.load(
    "https://threejs.org/examples/fonts/helvetiker_bold.typeface.json",
    createTypo
  );
  scene.add(group);

  // CREATE PART OF THE MOUSE/TOUCH OVER EFFECT
  let mouseX = 0;
  let mouseY = 0;
  const mouseFX = {
    windowHalfX: window.innerWidth / 2,
    windowHalfY: window.innerHeight / 2,
    coordinates: function(coordX, coordY) {
      mouseX = coordX - mouseFX.windowHalfX;
      mouseY = coordY - mouseFX.windowHalfY;
      
      mouseX = mouseX < 0 ? Math.abs(mouseX) : mouseX;
    },
    onMouseMove: function(e) {
      mouseFX.coordinates(e.clientX, e.clientY);
    },
    onTouchMove: function(e) {
      const touchX = e.changedTouches[0].clientX * 2;
      const touchY = e.changedTouches[0].clientY * 2;
      mouseFX.coordinates(touchX, touchY);
    }
  };
  document.addEventListener("mousemove", mouseFX.onMouseMove, false);
  document.addEventListener("touchmove", mouseFX.onTouchMove, false);

  // RESIZE CANVAS
  const resizeCanvas = () => {
    camera.aspect = window.innerWidth / window.innerHeight;
    camera.updateProjectionMatrix();
    renderer.setSize(window.innerWidth, window.innerHeight);
  };
  window.addEventListener("resize", resizeCanvas, false);

  // RENDER 3D GRAPHIC
  const render = () => {
    requestAnimationFrame(render);

    // Camera animation
    // Works with onMouseMove and onTouchMove functions
    const ct = 0.05;
    const pZ = (mouseX - camera.position.z) * ct;
    camera.position.z += pZ;		

    // Floating animation
    const radians = Date.now() * 0.0005;
    const rot = Math.sin(radians) * 0.1;
    group.rotation.x = rot;
    group.rotation.y = rot;

    renderer.render(scene, camera);
  };
  render();